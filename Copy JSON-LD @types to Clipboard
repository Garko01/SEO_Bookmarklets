// Extracts all @type properties from JSON-LD structured data on the current webpage
javascript:(function() {    function extractJsonLD() {        const scripts = document.querySelectorAll('script[type="application/ld+json"]');        let jsonldData = [];        scripts.forEach(script => {            try {                const data = JSON.parse(script.textContent);                jsonldData.push(data);            } catch (e) {                console.error("Error parsing JSON-LD:", e);            }        });        return jsonldData;    }    function extractAtType(data, result = []) {        if (Array.isArray(data)) {            data.forEach(item => extractAtType(item, result));        } else if (typeof data === "object" && data !== null) {            if (data["@type"]) {                if (Array.isArray(data["@type"])) {                    result.push(...data["@type"]);                } else {                    result.push(data["@type"]);                }            }            Object.values(data).forEach(value => extractAtType(value, result));        }        return result;    }    function copyToClipboard(text) {        const tempInput = document.createElement("textarea");        tempInput.style.position = "fixed";        tempInput.style.opacity = "0";        tempInput.value = text;        document.body.appendChild(tempInput);        tempInput.select();        document.execCommand("copy");        document.body.removeChild(tempInput);    }    const jsonldData = extractJsonLD();    const uniqueTypes = Array.from(new Set(extractAtType(jsonldData)));    const jsonldFiltered = uniqueTypes.join(", ");        copyToClipboard(jsonldFiltered);    alert("JSON-LD @types copied to clipboard: " + jsonldFiltered);})();
